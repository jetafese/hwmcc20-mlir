module {
  func @main() {
    %0 = btor.constant false
    %1 = btor.constant 0 : i6
    %2 = btor.constant 0 : i8
    br ^bb1(%0, %0, %0, %0, %0, %0, %0, %1, %2, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0 : i1, i1, i1, i1, i1, i1, i1, i6, i8, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1)
  ^bb1(%3: i1, %4: i1, %5: i1, %6: i1, %7: i1, %8: i1, %9: i1, %10: i6, %11: i8, %12: i1, %13: i1, %14: i1, %15: i1, %16: i1, %17: i1, %18: i1, %19: i1, %20: i1, %21: i1, %22: i1, %23: i1, %24: i1, %25: i1, %26: i1):  // 2 preds: ^bb0, ^bb1
    %27 = btor.constant false
    %28 = btor.input 7 : i1
    %29 = btor.ite %28, %27, %17 : i1
    %30 = btor.constant true
    %31 = btor.not %26 : i1
    %32 = btor.and %25, %31 : i1
    %33 = btor.ite %32, %30, %4 : i1
    %34 = btor.input 32 : i1
    %35 = btor.ite %7, %34, %33 : i1
    %36 = btor.input 33 : i1
    %37 = btor.ite %28, %36, %35 : i1
    %38 = btor.ite %7, %27, %37 : i1
    %39 = btor.input 34 : i1
    %40 = btor.ite %28, %39, %38 : i1
    %41 = btor.ite %28, %27, %40 : i1
    %42 = btor.not %22 : i1
    %43 = btor.and %21, %42 : i1
    %44 = btor.ite %43, %30, %5 : i1
    %45 = btor.input 35 : i1
    %46 = btor.ite %7, %45, %44 : i1
    %47 = btor.input 36 : i1
    %48 = btor.ite %28, %47, %46 : i1
    %49 = btor.ite %7, %27, %48 : i1
    %50 = btor.input 37 : i1
    %51 = btor.ite %28, %50, %49 : i1
    %52 = btor.ite %28, %27, %51 : i1
    %53 = btor.input 10 : i1
    %54 = btor.not %12 : i1
    %55 = btor.constant 0 : i8
    %56 = btor.cmp eq, %11, %55 : i8
    %57 = btor.and %56, %54 : i1
    %58 = btor.ite %57, %53, %6 : i1
    %59 = btor.input 38 : i1
    %60 = btor.ite %28, %59, %58 : i1
    %61 = btor.ite %28, %27, %60 : i1
    %62 = btor.not %14 : i1
    %63 = btor.and %62, %9 : i1
    %64 = btor.ite %28, %27, %63 : i1
    %65 = btor.input 39 : i1
    %66 = btor.input 40 : i1
    %67 = btor.redand %10 : i6
    %68 = btor.ite %67, %27, %8 : i1
    %69 = btor.input 41 : i1
    %70 = btor.not %14 : i1
    %71 = btor.not %13 : i1
    %72 = btor.not %8 : i1
    %73 = btor.and %6, %72 : i1
    %74 = btor.and %73, %71 : i1
    %75 = btor.and %74, %70 : i1
    %76 = btor.not %20 : i1
    %77 = btor.and %19, %76 : i1
    %78 = btor.not %24 : i1
    %79 = btor.and %23, %78 : i1
    %80 = btor.or %79, %77 : i1
    %81 = btor.or %80, %75 : i1
    %82 = btor.ite %81, %69, %68 : i1
    %83 = btor.ite %57, %82, %66 : i1
    %84 = btor.input 42 : i1
    %85 = btor.ite %28, %84, %83 : i1
    %86 = btor.ite %81, %30, %85 : i1
    %87 = btor.ite %57, %86, %65 : i1
    %88 = btor.input 43 : i1
    %89 = btor.ite %28, %88, %87 : i1
    %90 = btor.ite %57, %89, %8 : i1
    %91 = btor.input 44 : i1
    %92 = btor.ite %28, %91, %90 : i1
    %93 = btor.ite %28, %27, %92 : i1
    %94 = btor.ite %57, %8, %9 : i1
    %95 = btor.input 45 : i1
    %96 = btor.ite %28, %95, %94 : i1
    %97 = btor.ite %28, %27, %96 : i1
    %98 = btor.input 46 : i6
    %99 = btor.input 47 : i6
    %100 = btor.uext %30 : i1 to i6
    %101 = btor.add %10, %100 : i6
    %102 = btor.constant -31 : i6
    %103 = btor.constant 0 : i6
    %104 = btor.cmp eq, %10, %103 : i6
    %105 = btor.input 5 : i1
    %106 = btor.and %105, %104 : i1
    %107 = btor.ite %106, %102, %101 : i6
    %108 = btor.input 48 : i6
    %109 = btor.not %13 : i1
    %110 = btor.ite %109, %108, %107 : i6
    %111 = btor.ite %57, %110, %99 : i6
    %112 = btor.input 49 : i6
    %113 = btor.ite %28, %112, %111 : i6
    %114 = btor.ite %109, %103, %113 : i6
    %115 = btor.ite %57, %114, %98 : i6
    %116 = btor.input 50 : i6
    %117 = btor.ite %28, %116, %115 : i6
    %118 = btor.ite %57, %117, %10 : i6
    %119 = btor.input 51 : i6
    %120 = btor.ite %28, %119, %118 : i6
    %121 = btor.ite %28, %103, %120 : i6
    %122 = btor.constant 1 : i8
    %123 = btor.sub %11, %122 : i8
    %124 = btor.constant 1 : i32
    %125 = btor.input 2 : i8
    %126 = btor.constant 2 : i8
    %127 = btor.constant 2 : i32
    %128 = btor.uext %125 : i8 to i32
    %129 = btor.cmp ult, %128, %127 : i32
    %130 = btor.ite %129, %126, %125 : i8
    %131 = btor.constant 7 : i8
    %132 = btor.constant 1 : i8
    %133 = btor.slice %130, %131, %132 : i8, i7
    %134 = btor.constant 0 : i25
    %135 = btor.concat %134, %133 : i25, i7, i32
    %136 = btor.sub %135, %124 : i32
    %137 = btor.constant 7 : i32
    %138 = btor.constant 0 : i32
    %139 = btor.slice %136, %137, %138 : i32, i8
    %140 = btor.ite %56, %139, %123 : i8
    %141 = btor.input 52 : i8
    %142 = btor.ite %28, %141, %140 : i8
    %143 = btor.ite %28, %122, %142 : i8
    %144 = btor.not %12 : i1
    %145 = btor.and %56, %15 : i1
    %146 = btor.ite %145, %144, %12 : i1
    %147 = btor.input 53 : i1
    %148 = btor.ite %28, %147, %146 : i1
    %149 = btor.ite %28, %27, %148 : i1
    %150 = btor.ite %57, %8, %13 : i1
    %151 = btor.input 54 : i1
    %152 = btor.ite %28, %151, %150 : i1
    %153 = btor.ite %28, %27, %152 : i1
    %154 = btor.ite %57, %8, %14 : i1
    %155 = btor.input 55 : i1
    %156 = btor.ite %28, %155, %154 : i1
    %157 = btor.ite %28, %27, %156 : i1
    %158 = btor.ite %28, %27, %16 : i1
    %159 = btor.ite %57, %8, %16 : i1
    %160 = btor.input 56 : i1
    %161 = btor.ite %28, %160, %159 : i1
    %162 = btor.ite %28, %27, %161 : i1
    %163 = btor.constant 5 : i6
    %164 = btor.constant 5 : i6
    %165 = btor.slice %10, %163, %164 : i6, i1
    %166 = btor.not %165 : i1
    %167 = btor.and %8, %166 : i1
    %168 = btor.constant 0 : i32
    %169 = btor.uext %10 : i6 to i32
    %170 = btor.cmp eq, %169, %168 : i32
    %171 = btor.and %170, %105 : i1
    %172 = btor.constant 3 : i6
    %173 = btor.constant 1 : i6
    %174 = btor.slice %10, %172, %173 : i6, i3
    %175 = btor.redand %174 : i3
    %176 = btor.not %175 : i1
    %177 = btor.constant 4 : i6
    %178 = btor.constant 4 : i6
    %179 = btor.slice %10, %177, %178 : i6, i1
    %180 = btor.not %179 : i1
    %181 = btor.and %165, %180 : i1
    %182 = btor.and %181, %176 : i1
    %183 = btor.or %182, %171 : i1
    %184 = btor.not %18 : i1
    %185 = btor.and %184, %8 : i1
    %186 = btor.and %185, %183 : i1
    %187 = btor.uext %10 : i6 to i32
    %188 = btor.cmp eq, %187, %168 : i32
    %189 = btor.and %188, %105 : i1
    %190 = btor.or %165, %189 : i1
    %191 = btor.and %18, %8 : i1
    %192 = btor.and %191, %190 : i1
    %193 = btor.or %192, %186 : i1
    %194 = btor.or %193, %167 : i1
    %195 = btor.ite %57, %194, %17 : i1
    %196 = btor.input 57 : i1
    %197 = btor.ite %28, %196, %195 : i1
    %198 = btor.ite %28, %27, %197 : i1
    %199 = btor.input 58 : i1
    %200 = btor.input 59 : i1
    %201 = btor.ite %67, %27, %18 : i1
    %202 = btor.input 60 : i1
    %203 = btor.ite %81, %202, %201 : i1
    %204 = btor.ite %57, %203, %200 : i1
    %205 = btor.input 61 : i1
    %206 = btor.ite %28, %205, %204 : i1
    %207 = btor.input 62 : i1
    %208 = btor.input 63 : i1
    %209 = btor.not %8 : i1
    %210 = btor.ite %209, %79, %18 : i1
    %211 = btor.ite %81, %210, %208 : i1
    %212 = btor.ite %57, %211, %207 : i1
    %213 = btor.input 64 : i1
    %214 = btor.ite %28, %213, %212 : i1
    %215 = btor.ite %81, %214, %206 : i1
    %216 = btor.ite %57, %215, %199 : i1
    %217 = btor.input 65 : i1
    %218 = btor.ite %28, %217, %216 : i1
    %219 = btor.ite %57, %218, %18 : i1
    %220 = btor.input 66 : i1
    %221 = btor.ite %28, %220, %219 : i1
    %222 = btor.ite %28, %27, %221 : i1
    %223 = btor.ite %57, %5, %19 : i1
    %224 = btor.input 67 : i1
    %225 = btor.ite %28, %224, %223 : i1
    %226 = btor.ite %28, %27, %225 : i1
    %227 = btor.ite %57, %5, %20 : i1
    %228 = btor.input 68 : i1
    %229 = btor.ite %28, %228, %227 : i1
    %230 = btor.ite %28, %27, %229 : i1
    %231 = btor.input 6 : i1
    %232 = btor.ite %28, %27, %231 : i1
    %233 = btor.ite %28, %27, %231 : i1
    %234 = btor.ite %57, %4, %23 : i1
    %235 = btor.input 69 : i1
    %236 = btor.ite %28, %235, %234 : i1
    %237 = btor.ite %28, %27, %236 : i1
    %238 = btor.ite %57, %4, %24 : i1
    %239 = btor.input 70 : i1
    %240 = btor.ite %28, %239, %238 : i1
    %241 = btor.ite %28, %27, %240 : i1
    %242 = btor.input 11 : i1
    %243 = btor.ite %28, %27, %242 : i1
    %244 = btor.ite %28, %27, %242 : i1
    %245 = btor.or %4, %5 : i1
    %246 = btor.or %245, %6 : i1
    %247 = btor.or %246, %7 : i1
    %248 = btor.or %247, %8 : i1
    %249 = btor.or %248, %9 : i1
    %250 = btor.uext %249 : i1 to i32
    %251 = btor.cmp eq, %250, %124 : i32
    %252 = btor.uext %3 : i1 to i32
    %253 = btor.cmp eq, %252, %124 : i32
    %254 = btor.not %253 : i1
    %255 = btor.or %254, %251 : i1
    %256 = btor.not %255 : i1
    %257 = btor.and %30, %256 : i1
    btor.assert_not(%257)
    br ^bb1(%29, %41, %52, %61, %64, %93, %97, %121, %143, %149, %153, %157, %158, %162, %198, %222, %226, %230, %232, %233, %237, %241, %243, %244 : i1, i1, i1, i1, i1, i1, i1, i6, i8, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1, i1)
  }
}
