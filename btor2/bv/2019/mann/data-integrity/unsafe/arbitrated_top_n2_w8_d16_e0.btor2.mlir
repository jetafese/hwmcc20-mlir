module {
  func @main() {
    %0 = btor.constant true
    %1 = btor.nd_state 0 : i8
    %2 = btor.nd_state 1 : i5
    %3 = btor.nd_state 2 : i8
    %4 = btor.nd_state 3 : i8
    %5 = btor.nd_state 4 : i8
    %6 = btor.nd_state 5 : i8
    %7 = btor.nd_state 6 : i8
    %8 = btor.nd_state 7 : i8
    %9 = btor.nd_state 8 : i8
    %10 = btor.nd_state 9 : i8
    %11 = btor.nd_state 10 : i8
    %12 = btor.nd_state 11 : i8
    %13 = btor.nd_state 12 : i8
    %14 = btor.nd_state 13 : i8
    %15 = btor.nd_state 14 : i8
    %16 = btor.nd_state 15 : i8
    %17 = btor.nd_state 16 : i8
    %18 = btor.nd_state 17 : i8
    %19 = btor.nd_state 18 : i5
    %20 = btor.nd_state 19 : i8
    %21 = btor.nd_state 20 : i8
    %22 = btor.nd_state 21 : i8
    %23 = btor.nd_state 22 : i8
    %24 = btor.nd_state 23 : i8
    %25 = btor.nd_state 24 : i8
    %26 = btor.nd_state 25 : i8
    %27 = btor.nd_state 26 : i8
    %28 = btor.nd_state 27 : i8
    %29 = btor.nd_state 28 : i8
    %30 = btor.nd_state 29 : i8
    %31 = btor.nd_state 30 : i8
    %32 = btor.nd_state 31 : i8
    %33 = btor.nd_state 32 : i8
    %34 = btor.nd_state 33 : i8
    %35 = btor.nd_state 34 : i1
    %36 = btor.nd_state 35 : i1
    %37 = btor.nd_state 36 : i6
    %38 = btor.nd_state 37 : i8
    %39 = btor.nd_state 38 : i5
    %40 = btor.nd_state 39 : i5
    %41 = btor.nd_state 40 : i5
    %42 = btor.nd_state 41 : i5
    %43 = btor.nd_state 43 : i5
    %44 = btor.nd_state 44 : i5
    br ^bb1(%1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34, %35, %36, %37, %38, %39, %40, %41, %42, %0, %43, %44 : i8, i5, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i5, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i1, i1, i6, i8, i5, i5, i5, i5, i1, i5, i5)
  ^bb1(%45: i8, %46: i5, %47: i8, %48: i8, %49: i8, %50: i8, %51: i8, %52: i8, %53: i8, %54: i8, %55: i8, %56: i8, %57: i8, %58: i8, %59: i8, %60: i8, %61: i8, %62: i8, %63: i5, %64: i8, %65: i8, %66: i8, %67: i8, %68: i8, %69: i8, %70: i8, %71: i8, %72: i8, %73: i8, %74: i8, %75: i8, %76: i8, %77: i8, %78: i8, %79: i1, %80: i1, %81: i6, %82: i8, %83: i5, %84: i5, %85: i5, %86: i5, %87: i1, %88: i5, %89: i5):  // 2 preds: ^bb0, ^bb1
    %90 = btor.input 2 : i16
    %91 = btor.constant 15 : i16
    %92 = btor.constant 8 : i16
    %93 = btor.slice %90, %91, %92 : i16, i8
    %94 = btor.input 0 : i1
    %95 = btor.uext %94 : i1 to i8
    %96 = btor.and %95, %93 : i8
    %97 = btor.constant -1 : i4
    %98 = btor.constant 3 : i5
    %99 = btor.constant 0 : i5
    %100 = btor.slice %89, %98, %99 : i5, i4
    %101 = btor.cmp eq, %100, %97 : i4
    %102 = btor.input 4 : i2
    %103 = btor.constant 1 : i2
    %104 = btor.constant 1 : i2
    %105 = btor.slice %102, %103, %104 : i2, i1
    %106 = btor.and %105, %101 : i1
    %107 = btor.ite %106, %96, %45 : i8
    %108 = btor.constant 0 : i8
    %109 = btor.input 6 : i1
    %110 = btor.ite %109, %108, %107 : i8
    %111 = btor.input 3 : i1
    %112 = btor.input 5 : i1
    %113 = btor.and %112, %111 : i1
    %114 = btor.uext %113 : i1 to i5
    %115 = btor.add %46, %114 : i5
    %116 = btor.or %105, %113 : i1
    %117 = btor.or %116, %109 : i1
    %118 = btor.ite %117, %115, %46 : i5
    %119 = btor.constant 0 : i5
    %120 = btor.ite %109, %119, %118 : i5
    %121 = btor.constant -2 : i4
    %122 = btor.cmp eq, %100, %121 : i4
    %123 = btor.and %105, %122 : i1
    %124 = btor.ite %123, %96, %47 : i8
    %125 = btor.ite %109, %108, %124 : i8
    %126 = btor.constant -3 : i4
    %127 = btor.cmp eq, %100, %126 : i4
    %128 = btor.and %105, %127 : i1
    %129 = btor.ite %128, %96, %48 : i8
    %130 = btor.ite %109, %108, %129 : i8
    %131 = btor.constant -4 : i4
    %132 = btor.cmp eq, %100, %131 : i4
    %133 = btor.and %105, %132 : i1
    %134 = btor.ite %133, %96, %49 : i8
    %135 = btor.ite %109, %108, %134 : i8
    %136 = btor.constant -5 : i4
    %137 = btor.cmp eq, %100, %136 : i4
    %138 = btor.and %105, %137 : i1
    %139 = btor.ite %138, %96, %50 : i8
    %140 = btor.ite %109, %108, %139 : i8
    %141 = btor.constant -6 : i4
    %142 = btor.cmp eq, %100, %141 : i4
    %143 = btor.and %105, %142 : i1
    %144 = btor.ite %143, %96, %51 : i8
    %145 = btor.ite %109, %108, %144 : i8
    %146 = btor.constant -7 : i4
    %147 = btor.cmp eq, %100, %146 : i4
    %148 = btor.and %105, %147 : i1
    %149 = btor.ite %148, %96, %52 : i8
    %150 = btor.ite %109, %108, %149 : i8
    %151 = btor.constant -8 : i4
    %152 = btor.cmp eq, %100, %151 : i4
    %153 = btor.and %105, %152 : i1
    %154 = btor.ite %153, %96, %53 : i8
    %155 = btor.ite %109, %108, %154 : i8
    %156 = btor.constant -1 : i3
    %157 = btor.uext %156 : i3 to i4
    %158 = btor.cmp eq, %100, %157 : i4
    %159 = btor.and %105, %158 : i1
    %160 = btor.ite %159, %96, %54 : i8
    %161 = btor.ite %109, %108, %160 : i8
    %162 = btor.constant -2 : i3
    %163 = btor.uext %162 : i3 to i4
    %164 = btor.cmp eq, %100, %163 : i4
    %165 = btor.and %105, %164 : i1
    %166 = btor.ite %165, %96, %55 : i8
    %167 = btor.ite %109, %108, %166 : i8
    %168 = btor.constant -3 : i3
    %169 = btor.uext %168 : i3 to i4
    %170 = btor.cmp eq, %100, %169 : i4
    %171 = btor.and %105, %170 : i1
    %172 = btor.ite %171, %96, %56 : i8
    %173 = btor.ite %109, %108, %172 : i8
    %174 = btor.constant -4 : i3
    %175 = btor.uext %174 : i3 to i4
    %176 = btor.cmp eq, %100, %175 : i4
    %177 = btor.and %105, %176 : i1
    %178 = btor.ite %177, %96, %57 : i8
    %179 = btor.ite %109, %108, %178 : i8
    %180 = btor.constant -1 : i2
    %181 = btor.uext %180 : i2 to i4
    %182 = btor.cmp eq, %100, %181 : i4
    %183 = btor.and %105, %182 : i1
    %184 = btor.ite %183, %96, %58 : i8
    %185 = btor.ite %109, %108, %184 : i8
    %186 = btor.constant -2 : i2
    %187 = btor.uext %186 : i2 to i4
    %188 = btor.cmp eq, %100, %187 : i4
    %189 = btor.and %105, %188 : i1
    %190 = btor.ite %189, %96, %59 : i8
    %191 = btor.ite %109, %108, %190 : i8
    %192 = btor.constant true
    %193 = btor.uext %192 : i1 to i4
    %194 = btor.cmp eq, %100, %193 : i4
    %195 = btor.and %105, %194 : i1
    %196 = btor.ite %195, %96, %60 : i8
    %197 = btor.ite %109, %108, %196 : i8
    %198 = btor.redor %100 : i4
    %199 = btor.not %198 : i1
    %200 = btor.and %105, %199 : i1
    %201 = btor.ite %200, %96, %61 : i8
    %202 = btor.ite %109, %108, %201 : i8
    %203 = btor.constant 7 : i16
    %204 = btor.constant 0 : i16
    %205 = btor.slice %90, %203, %204 : i16, i8
    %206 = btor.uext %94 : i1 to i8
    %207 = btor.and %206, %205 : i8
    %208 = btor.constant 3 : i5
    %209 = btor.constant 0 : i5
    %210 = btor.slice %88, %208, %209 : i5, i4
    %211 = btor.cmp eq, %210, %97 : i4
    %212 = btor.constant 0 : i2
    %213 = btor.constant 0 : i2
    %214 = btor.slice %102, %212, %213 : i2, i1
    %215 = btor.and %214, %211 : i1
    %216 = btor.ite %215, %207, %62 : i8
    %217 = btor.ite %109, %108, %216 : i8
    %218 = btor.not %111 : i1
    %219 = btor.and %112, %218 : i1
    %220 = btor.uext %219 : i1 to i5
    %221 = btor.add %63, %220 : i5
    %222 = btor.or %214, %219 : i1
    %223 = btor.or %222, %109 : i1
    %224 = btor.ite %223, %221, %63 : i5
    %225 = btor.ite %109, %119, %224 : i5
    %226 = btor.cmp eq, %210, %121 : i4
    %227 = btor.and %214, %226 : i1
    %228 = btor.ite %227, %207, %64 : i8
    %229 = btor.ite %109, %108, %228 : i8
    %230 = btor.cmp eq, %210, %126 : i4
    %231 = btor.and %214, %230 : i1
    %232 = btor.ite %231, %207, %65 : i8
    %233 = btor.ite %109, %108, %232 : i8
    %234 = btor.cmp eq, %210, %131 : i4
    %235 = btor.and %214, %234 : i1
    %236 = btor.ite %235, %207, %66 : i8
    %237 = btor.ite %109, %108, %236 : i8
    %238 = btor.cmp eq, %210, %136 : i4
    %239 = btor.and %214, %238 : i1
    %240 = btor.ite %239, %207, %67 : i8
    %241 = btor.ite %109, %108, %240 : i8
    %242 = btor.cmp eq, %210, %141 : i4
    %243 = btor.and %214, %242 : i1
    %244 = btor.ite %243, %207, %68 : i8
    %245 = btor.ite %109, %108, %244 : i8
    %246 = btor.cmp eq, %210, %146 : i4
    %247 = btor.and %214, %246 : i1
    %248 = btor.ite %247, %207, %69 : i8
    %249 = btor.ite %109, %108, %248 : i8
    %250 = btor.cmp eq, %210, %151 : i4
    %251 = btor.and %214, %250 : i1
    %252 = btor.ite %251, %207, %70 : i8
    %253 = btor.ite %109, %108, %252 : i8
    %254 = btor.uext %156 : i3 to i4
    %255 = btor.cmp eq, %210, %254 : i4
    %256 = btor.and %214, %255 : i1
    %257 = btor.ite %256, %207, %71 : i8
    %258 = btor.ite %109, %108, %257 : i8
    %259 = btor.uext %162 : i3 to i4
    %260 = btor.cmp eq, %210, %259 : i4
    %261 = btor.and %214, %260 : i1
    %262 = btor.ite %261, %207, %72 : i8
    %263 = btor.ite %109, %108, %262 : i8
    %264 = btor.uext %168 : i3 to i4
    %265 = btor.cmp eq, %210, %264 : i4
    %266 = btor.and %214, %265 : i1
    %267 = btor.ite %266, %207, %73 : i8
    %268 = btor.ite %109, %108, %267 : i8
    %269 = btor.uext %174 : i3 to i4
    %270 = btor.cmp eq, %210, %269 : i4
    %271 = btor.and %214, %270 : i1
    %272 = btor.ite %271, %207, %74 : i8
    %273 = btor.ite %109, %108, %272 : i8
    %274 = btor.uext %180 : i2 to i4
    %275 = btor.cmp eq, %210, %274 : i4
    %276 = btor.and %214, %275 : i1
    %277 = btor.ite %276, %207, %75 : i8
    %278 = btor.ite %109, %108, %277 : i8
    %279 = btor.uext %186 : i2 to i4
    %280 = btor.cmp eq, %210, %279 : i4
    %281 = btor.and %214, %280 : i1
    %282 = btor.ite %281, %207, %76 : i8
    %283 = btor.ite %109, %108, %282 : i8
    %284 = btor.uext %192 : i1 to i4
    %285 = btor.cmp eq, %210, %284 : i4
    %286 = btor.and %214, %285 : i1
    %287 = btor.ite %286, %207, %77 : i8
    %288 = btor.ite %109, %108, %287 : i8
    %289 = btor.redor %210 : i4
    %290 = btor.not %289 : i1
    %291 = btor.and %214, %290 : i1
    %292 = btor.ite %291, %207, %78 : i8
    %293 = btor.ite %109, %108, %292 : i8
    %294 = btor.input 7 : i1
    %295 = btor.and %294, %214 : i1
    %296 = btor.and %295, %214 : i1
    %297 = btor.or %79, %296 : i1
    %298 = btor.not %79 : i1
    %299 = btor.ite %298, %297, %79 : i1
    %300 = btor.constant false
    %301 = btor.ite %109, %300, %299 : i1
    %302 = btor.uext %219 : i1 to i6
    %303 = btor.not %79 : i1
    %304 = btor.and %214, %303 : i1
    %305 = btor.uext %304 : i1 to i6
    %306 = btor.add %81, %305 : i6
    %307 = btor.sub %306, %302 : i6
    %308 = btor.constant 0 : i6
    %309 = btor.ite %109, %308, %307 : i6
    %310 = btor.redor %309 : i6
    %311 = btor.not %310 : i1
    %312 = btor.redor %81 : i6
    %313 = btor.not %80 : i1
    %314 = btor.and %79, %313 : i1
    %315 = btor.and %314, %312 : i1
    %316 = btor.and %315, %311 : i1
    %317 = btor.or %316, %80 : i1
    %318 = btor.ite %192, %317, %80 : i1
    %319 = btor.ite %109, %300, %318 : i1
    %320 = btor.or %214, %219 : i1
    %321 = btor.or %320, %109 : i1
    %322 = btor.or %321, %79 : i1
    %323 = btor.ite %322, %309, %81 : i6
    %324 = btor.ite %109, %308, %323 : i6
    %325 = btor.and %296, %298 : i1
    %326 = btor.ite %325, %207, %82 : i8
    %327 = btor.ite %109, %108, %326 : i8
    %328 = btor.uext %214 : i1 to i5
    %329 = btor.uext %219 : i1 to i5
    %330 = btor.add %83, %329 : i5
    %331 = btor.sub %330, %328 : i5
    %332 = btor.constant -15 : i5
    %333 = btor.ite %109, %332, %331 : i5
    %334 = btor.uext %105 : i1 to i5
    %335 = btor.uext %113 : i1 to i5
    %336 = btor.add %84, %335 : i5
    %337 = btor.sub %336, %334 : i5
    %338 = btor.ite %109, %332, %337 : i5
    %339 = btor.uext %219 : i1 to i5
    %340 = btor.uext %214 : i1 to i5
    %341 = btor.add %85, %340 : i5
    %342 = btor.sub %341, %339 : i5
    %343 = btor.ite %109, %119, %342 : i5
    %344 = btor.uext %113 : i1 to i5
    %345 = btor.uext %105 : i1 to i5
    %346 = btor.add %86, %345 : i5
    %347 = btor.sub %346, %344 : i5
    %348 = btor.ite %109, %119, %347 : i5
    %349 = btor.uext %214 : i1 to i5
    %350 = btor.add %88, %349 : i5
    %351 = btor.ite %223, %350, %88 : i5
    %352 = btor.ite %109, %119, %351 : i5
    %353 = btor.uext %105 : i1 to i5
    %354 = btor.add %89, %353 : i5
    %355 = btor.ite %117, %354, %89 : i5
    %356 = btor.ite %109, %119, %355 : i5
    %357 = btor.not %192 : i1
    %358 = btor.not %214 : i1
    %359 = btor.uext %300 : i1 to i5
    %360 = btor.cmp ugt, %83, %359 : i5
    %361 = btor.or %360, %358 : i1
    %362 = btor.or %361, %357 : i1
    btor.constraint(%362)
    %363 = btor.not %192 : i1
    %364 = btor.not %105 : i1
    %365 = btor.uext %300 : i1 to i5
    %366 = btor.cmp ugt, %84, %365 : i5
    %367 = btor.or %366, %364 : i1
    %368 = btor.or %367, %363 : i1
    btor.constraint(%368)
    %369 = btor.not %192 : i1
    %370 = btor.not %219 : i1
    %371 = btor.redor %85 : i5
    %372 = btor.not %371 : i1
    %373 = btor.not %372 : i1
    %374 = btor.or %373, %370 : i1
    %375 = btor.or %374, %369 : i1
    btor.constraint(%375)
    %376 = btor.not %192 : i1
    %377 = btor.not %113 : i1
    %378 = btor.redor %86 : i5
    %379 = btor.not %378 : i1
    %380 = btor.not %379 : i1
    %381 = btor.or %380, %377 : i1
    %382 = btor.or %381, %376 : i1
    btor.constraint(%382)
    %383 = btor.not %192 : i1
    %384 = btor.cmp eq, %109, %87 : i1
    %385 = btor.or %384, %383 : i1
    btor.constraint(%385)
    %386 = btor.not %192 : i1
    %387 = btor.not %219 : i1
    %388 = btor.constant -16 : i5
    %389 = btor.cmp ne, %83, %388 : i5
    %390 = btor.or %389, %387 : i1
    %391 = btor.or %390, %386 : i1
    btor.constraint(%391)
    %392 = btor.not %192 : i1
    %393 = btor.not %113 : i1
    %394 = btor.cmp ne, %84, %388 : i5
    %395 = btor.or %394, %393 : i1
    %396 = btor.or %395, %392 : i1
    btor.constraint(%396)
    %397 = btor.concat %219, %219 : i1, i1, i2
    %398 = btor.concat %219, %397 : i1, i2, i3
    %399 = btor.concat %219, %398 : i1, i3, i4
    %400 = btor.concat %219, %399 : i1, i4, i5
    %401 = btor.concat %219, %400 : i1, i5, i6
    %402 = btor.concat %219, %401 : i1, i6, i7
    %403 = btor.concat %219, %402 : i1, i7, i8
    %404 = btor.input 9 : i8
    %405 = btor.constant 3 : i5
    %406 = btor.constant 0 : i5
    %407 = btor.slice %63, %405, %406 : i5, i4
    %408 = btor.cmp eq, %407, %97 : i4
    %409 = btor.ite %408, %62, %404 : i8
    %410 = btor.cmp eq, %407, %121 : i4
    %411 = btor.ite %410, %64, %409 : i8
    %412 = btor.cmp eq, %407, %126 : i4
    %413 = btor.ite %412, %65, %411 : i8
    %414 = btor.cmp eq, %407, %131 : i4
    %415 = btor.ite %414, %66, %413 : i8
    %416 = btor.cmp eq, %407, %136 : i4
    %417 = btor.ite %416, %67, %415 : i8
    %418 = btor.cmp eq, %407, %141 : i4
    %419 = btor.ite %418, %68, %417 : i8
    %420 = btor.cmp eq, %407, %146 : i4
    %421 = btor.ite %420, %69, %419 : i8
    %422 = btor.cmp eq, %407, %151 : i4
    %423 = btor.ite %422, %70, %421 : i8
    %424 = btor.uext %156 : i3 to i4
    %425 = btor.cmp eq, %407, %424 : i4
    %426 = btor.ite %425, %71, %423 : i8
    %427 = btor.uext %162 : i3 to i4
    %428 = btor.cmp eq, %407, %427 : i4
    %429 = btor.ite %428, %72, %426 : i8
    %430 = btor.uext %168 : i3 to i4
    %431 = btor.cmp eq, %407, %430 : i4
    %432 = btor.ite %431, %73, %429 : i8
    %433 = btor.uext %174 : i3 to i4
    %434 = btor.cmp eq, %407, %433 : i4
    %435 = btor.ite %434, %74, %432 : i8
    %436 = btor.uext %180 : i2 to i4
    %437 = btor.cmp eq, %407, %436 : i4
    %438 = btor.ite %437, %75, %435 : i8
    %439 = btor.uext %186 : i2 to i4
    %440 = btor.cmp eq, %407, %439 : i4
    %441 = btor.ite %440, %76, %438 : i8
    %442 = btor.uext %192 : i1 to i4
    %443 = btor.cmp eq, %407, %442 : i4
    %444 = btor.ite %443, %77, %441 : i8
    %445 = btor.redor %407 : i4
    %446 = btor.not %445 : i1
    %447 = btor.ite %446, %78, %444 : i8
    %448 = btor.and %447, %403 : i8
    %449 = btor.concat %113, %113 : i1, i1, i2
    %450 = btor.concat %113, %449 : i1, i2, i3
    %451 = btor.concat %113, %450 : i1, i3, i4
    %452 = btor.concat %113, %451 : i1, i4, i5
    %453 = btor.concat %113, %452 : i1, i5, i6
    %454 = btor.concat %113, %453 : i1, i6, i7
    %455 = btor.concat %113, %454 : i1, i7, i8
    %456 = btor.input 8 : i8
    %457 = btor.constant 3 : i5
    %458 = btor.constant 0 : i5
    %459 = btor.slice %46, %457, %458 : i5, i4
    %460 = btor.cmp eq, %459, %97 : i4
    %461 = btor.ite %460, %45, %456 : i8
    %462 = btor.cmp eq, %459, %121 : i4
    %463 = btor.ite %462, %47, %461 : i8
    %464 = btor.cmp eq, %459, %126 : i4
    %465 = btor.ite %464, %48, %463 : i8
    %466 = btor.cmp eq, %459, %131 : i4
    %467 = btor.ite %466, %49, %465 : i8
    %468 = btor.cmp eq, %459, %136 : i4
    %469 = btor.ite %468, %50, %467 : i8
    %470 = btor.cmp eq, %459, %141 : i4
    %471 = btor.ite %470, %51, %469 : i8
    %472 = btor.cmp eq, %459, %146 : i4
    %473 = btor.ite %472, %52, %471 : i8
    %474 = btor.cmp eq, %459, %151 : i4
    %475 = btor.ite %474, %53, %473 : i8
    %476 = btor.uext %156 : i3 to i4
    %477 = btor.cmp eq, %459, %476 : i4
    %478 = btor.ite %477, %54, %475 : i8
    %479 = btor.uext %162 : i3 to i4
    %480 = btor.cmp eq, %459, %479 : i4
    %481 = btor.ite %480, %55, %478 : i8
    %482 = btor.uext %168 : i3 to i4
    %483 = btor.cmp eq, %459, %482 : i4
    %484 = btor.ite %483, %56, %481 : i8
    %485 = btor.uext %174 : i3 to i4
    %486 = btor.cmp eq, %459, %485 : i4
    %487 = btor.ite %486, %57, %484 : i8
    %488 = btor.uext %180 : i2 to i4
    %489 = btor.cmp eq, %459, %488 : i4
    %490 = btor.ite %489, %58, %487 : i8
    %491 = btor.uext %186 : i2 to i4
    %492 = btor.cmp eq, %459, %491 : i4
    %493 = btor.ite %492, %59, %490 : i8
    %494 = btor.uext %192 : i1 to i4
    %495 = btor.cmp eq, %459, %494 : i4
    %496 = btor.ite %495, %60, %493 : i8
    %497 = btor.redor %459 : i4
    %498 = btor.not %497 : i1
    %499 = btor.ite %498, %61, %496 : i8
    %500 = btor.and %499, %455 : i8
    %501 = btor.or %500, %448 : i8
    %502 = btor.cmp eq, %82, %501 : i8
    %503 = btor.not %316 : i1
    %504 = btor.or %503, %502 : i1
    %505 = btor.input 10 : i1
    %506 = btor.ite %87, %505, %504 : i1
    %507 = btor.not %506 : i1
    %508 = btor.ite %87, %300, %192 : i1
    %509 = btor.and %508, %507 : i1
    btor.assert_not(%509)
    br ^bb1(%110, %120, %125, %130, %135, %140, %145, %150, %155, %161, %167, %173, %179, %185, %191, %197, %202, %217, %225, %229, %233, %237, %241, %245, %249, %253, %258, %263, %268, %273, %278, %283, %288, %293, %301, %319, %324, %327, %333, %338, %343, %348, %300, %352, %356 : i8, i5, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i5, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i1, i1, i6, i8, i5, i5, i5, i5, i1, i5, i5)
  }
}
